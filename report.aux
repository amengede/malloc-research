\relax 
\citation{analytical}
\citation{ibmMainframes}
\citation{ibmDeveloper}
\citation{10.5555/2621961}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{}\protected@file@percent }
\citation{accessTime}
\citation{accessTime}
\citation{10.5555/202036}
\citation{stackFrame}
\citation{stackFrame}
\citation{knuth97}
\@writefile{toc}{\contentsline {section}{\numberline {2}Terminology}{3}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Von Neumann Architecture}}{3}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Approximate time to access various memory types \cite  {accessTime}}}{4}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Example stack usage for function call. Arguments are stored in reverse order so arbitrary numbers of arguments can be handled. The function prologue and epilogue are called at the beginning and end of the function respectively in order to save and restore the return address. \cite  {stackFrame}}}{4}{}\protected@file@percent }
\citation{allignment}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Splitting a block}}{5}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Memory Coalescing}}{6}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces External fragmentation}}{6}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Internal fragmentation}}{7}{}\protected@file@percent }
\citation{knuth97}
\citation{10.5555/2025255}
\citation{10.1145/3828.3835}
\citation{10.1145/358841.358852}
\citation{10.1145/800217.806613}
\citation{matani2021fastbitmapfitcpu}
\citation{528746}
\citation{inproceedings}
\citation{10.1002/spe.4380240602}
\citation{10.1145/301589.286864}
\citation{10.1145/173262.155107}
\@writefile{toc}{\contentsline {section}{\numberline {3}Previous Work}{8}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces A linked-list representation of memory. Each header links to the header for the next free block. Neighbouring blocks can be found using block sizes.}}{8}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces A buddy allocation system, represented here with a binary tree.}}{9}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces A splay tree, before and after searching for node x.}}{9}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces A Cartesian tree, x axis represents memory location, y axis represents value.}}{10}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Separating headers from blocks}}{10}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Bitmap allocator, leaf nodes represent actual memory blocks. Algorithm chooses search directions at each level in order to minimise the distance to the allocation hint.}}{11}{}\protected@file@percent }
\citation{doom3-malloc}
\@writefile{toc}{\contentsline {section}{\numberline {4}In Practice}{13}{}\protected@file@percent }
\citation{TLSF-implementation}
\citation{free-list-implementation}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces Standard C allocator}}{17}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {5}Strategies}{17}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces Two Level Segregated Fit allocator}}{18}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {6}Conclusion}{18}{}\protected@file@percent }
\bibdata{bibbed}
\bibcite{allignment}{1}
\bibcite{analytical}{2}
\bibcite{ibmDeveloper}{3}
\bibcite{10.5555/202036}{4}
\bibcite{10.1002/spe.4380240602}{5}
\@writefile{lof}{\contentsline {figure}{\numberline {16}{\ignorespaces Free List allocator (first fit strategy)}}{19}{}\protected@file@percent }
\bibcite{10.5555/2621961}{6}
\bibcite{10.1145/173262.155107}{7}
\bibcite{10.1145/301589.286864}{8}
\bibcite{10.5555/2025255}{9}
\bibcite{ibmMainframes}{10}
\bibcite{knuth97}{11}
\bibcite{accessTime}{12}
\bibcite{inproceedings}{13}
\bibcite{matani2021fastbitmapfitcpu}{14}
\bibcite{528746}{15}
\@writefile{lof}{\contentsline {figure}{\numberline {17}{\ignorespaces Standard C allocator}}{20}{}\protected@file@percent }
\bibcite{TLSF-implementation}{16}
\bibcite{10.1145/3828.3835}{17}
\bibcite{doom3-malloc}{18}
\bibcite{10.1145/800217.806613}{19}
\bibcite{free-list-implementation}{20}
\bibcite{10.1145/358841.358852}{21}
\bibcite{stackFrame}{22}
\bibstyle{plain}
\@writefile{lof}{\contentsline {figure}{\numberline {18}{\ignorespaces Two Level Segregated Fit allocator}}{21}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {A}A}{21}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {19}{\ignorespaces Free List allocator (first fit strategy)}}{22}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {20}{\ignorespaces Memory Allocation times}}{23}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {21}{\ignorespaces Memory Free times}}{24}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {22}{\ignorespaces Distribution of requested sizes}}{25}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {23}{\ignorespaces A CPU raytracer.}}{26}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {B}B }{28}{}\protected@file@percent }
\gdef \@abspage@last{28}
